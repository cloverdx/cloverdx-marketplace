<?xml version="1.0" encoding="UTF-8"?>
<Graph author="CloverDX" category="writers" created="Thu Aug 02 10:40:41 CEST 2018" description="Write new secret value into Azure Key Vault secret. If the secret does not exist, it is automatically created. Secrets are created based on data coming into the component via input port to allow for sending new values generated based on any algorithm." guiVersion="6.3.0.1747" id="1533217385607" largeIconPath="${GRAPH_DIR}/azure-key-vault/azure-key-vault-64.png" licenseCode="CLP1DJAVLI69475596BY" mediumIconPath="${GRAPH_DIR}/azure-key-vault/azure-key-vault-32.png" name="KeyVaultSecretGet" nature="subgraph" showComponentDetails="true" smallIconPath="${GRAPH_DIR}/azure-key-vault/azure-key-vault-16.png">
<Global>
<inputPorts>
<singlePort connected="true" name="0"/>
</inputPorts>
<outputPorts>
<singlePort connected="false" name="0"/>
<singlePort connected="false" keepEdge="true" name="1" required="false"/>
</outputPorts>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="KeyVaultError" recordDelimiter="\r\n" type="delimited">
<Field name="errorMessage" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata5">
<Record fieldDelimiter="|" name="KeyVaultSetResult" previewAttachmentCharset="UTF-8" recordDelimiter="\r\n" type="delimited">
<Field name="id" type="string"/>
<Field name="enabled" type="boolean"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="created" type="date"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="updated" type="date"/>
<Field name="recoveryLevel" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata3">
<Record fieldDelimiter="|" name="SecretValue" recordDelimiter="\r\n" type="delimited">
<Field name="secretName" type="string"/>
<Field name="secretValue" type="string"/>
</Record>
</Metadata>
<Connection config="${OAUTH2_CONNECTION_URL}" id="OAUTH20" type="OAUTH2"/>
<GraphParameters>
<GraphParameter label="Key Vault name" name="KEY_VAULT_NAME" public="true" required="true" value="Test"/>
<GraphParameter name="API_VERSION" value="2016-10-01"/>
<GraphParameterFile fileURL="library.prm"/>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<Dictionary/>
</Global>
<Phase number="0">
<Node guiName="Check errors and parse" guiX="593" guiY="140" id="CHECK_ERRORS_AND_PARSE" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

function integer transform() {
	if ($in.0.statusCode == 200) {
		variant response = parseJson($in.0.content);
		$out.0.id = cast(response["id"], string);
		$out.0.enabled = cast(response["attributes"]["enabled"], boolean);
		$out.0.created = long2date(cast(response["attributes"]["created"], long));
		$out.0.updated = long2date(cast(response["attributes"]["updated"], long));
		$out.0.recoveryLevel = cast(response["attributes"]["recoveryLevel"], string);
		
		return 0;
	} else {
		$out.1.errorMessage = $in.0.content;
		return 1;
	}
}
]]></attr>
</Node>
<Node guiName="Fail on error" guiX="1096" guiY="206" id="FAIL_ON_ERROR" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

function integer transform() {
	if (isSubgraphOutputPortConnected(1)) {
		$out.0.errorMessage = $in.0.errorMessage;
	} else {
		raiseError($in.0.errorMessage);
	}

	return ALL;
}
]]></attr>
</Node>
<Node debugInput="true" guiName="GetJobInput" guiX="32" guiY="140" id="GET_JOB_INPUT" type="GET_JOB_INPUT">
<attr name="mapping"><![CDATA[//#CTL2

function integer transform() {
	$out.0.secretName = "test-secret}";
	$out.0.secretValue = "test-value-" + date2str(today(), "yyyyMMddHHmmss");

	return ALL;
}
]]></attr>
</Node>
<Node guiName="Set Key Vault Secret" guiX="332" guiY="140" id="SET_KEY_VAULT_SECRET" oAuth2Connection="OAUTH20" requestMethod="PUT" type="HTTP_CONNECTOR" url="https://${KEY_VAULT_NAME}.vault.azure.net/secrets/">
<attr name="errorOutputMapping"><![CDATA[//#CTL2

function integer transform() {
	$out.1.errorMessage = $in.1.errorMessage;

	return ALL;
}
]]></attr>
<attr name="inputMapping"><![CDATA[//#CTL2

function integer transform() {
	$out.3.api_version = "${API_VERSION}";
	$out.0.URL = "https://${KEY_VAULT_NAME}.vault.azure.net/secrets/" + $in.0.secretName;
	
	variant requestContent = {
		"value" -> $in.0.secretValue
	};
	
	$out.0.requestContent = writeJson(requestContent);

	return ALL;
}
]]></attr>
<attr name="standardOutputMapping"><![CDATA[//#CTL2

function integer transform() {
	$out.0.* = $in.1.*;

	return ALL;
}
]]></attr>
<attr name="headerProperties"><![CDATA[Content-Type=application/json
]]></attr>
<attr name="requestParameters"><![CDATA[api-version=
]]></attr>
</Node>
<Node guiName="SimpleGather" guiX="892" guiY="206" id="SIMPLE_GATHER" type="SIMPLE_GATHER"/>
<Node guiName="SubgraphInput" guiX="228" guiY="10" id="SUBGRAPH_INPUT" type="SUBGRAPH_INPUT">
<Port guiY="157" name="0"/>
<Port guiY="232" name="1"/>
</Node>
<Node guiName="SubgraphOutput" guiX="1304" guiY="10" id="SUBGRAPH_OUTPUT" type="SUBGRAPH_OUTPUT">
<Port guiY="157" name="0"/>
<Port guiY="223" name="1"/>
<Port guiY="295" name="2"/>
</Node>
<Edge fromNode="CHECK_ERRORS_AND_PARSE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge10" inPort="Port 0 (in)" metadata="Metadata5" outPort="Port 0 (out)" toNode="SUBGRAPH_OUTPUT:0"/>
<Edge fromNode="CHECK_ERRORS_AND_PARSE:1" guiBendpoints="" guiRouter="Manhattan" id="Edge13" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 1 (out)" toNode="SIMPLE_GATHER:0"/>
<Edge fromNode="FAIL_ON_ERROR:0" guiBendpoints="" guiRouter="Manhattan" id="Edge15" inPort="Port 1 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SUBGRAPH_OUTPUT:1"/>
<Edge fromNode="GET_JOB_INPUT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="SUBGRAPH_INPUT:0"/>
<Edge fromNode="SET_KEY_VAULT_SECRET:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="CHECK_ERRORS_AND_PARSE:0"/>
<Edge fromNode="SET_KEY_VAULT_SECRET:1" guiBendpoints="" guiRouter="Manhattan" id="Edge12" inPort="Port 1 (in)" metadata="Metadata0" outPort="Port 1 (out)" toNode="SIMPLE_GATHER:1"/>
<Edge fromNode="SIMPLE_GATHER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge11" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="FAIL_ON_ERROR:0"/>
<Edge fromNode="SUBGRAPH_INPUT:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" toNode="SET_KEY_VAULT_SECRET:0"/>
</Phase>
</Graph>

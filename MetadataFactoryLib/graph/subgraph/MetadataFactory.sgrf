<?xml version="1.0" encoding="UTF-8"?>
<Graph author="CloverDX" category="transformers" created="Thu Dec 05 09:15:17 GMT 2019" description="Component capable changing / extending metadata connected to its input port. It can extend, remove fields based on filter based on specific fields or based on regular expression matching field names." guiVersion="5.15.0.15" id="1575551600170" largeIconPath="${SUBGRAPH_DIR}/icons/metadata-factory-64.png" licenseCode="CLP1DCLOVE53064697BY" mediumIconPath="${SUBGRAPH_DIR}/icons/metadata-factory-32.png" name="MetaEngineer" nature="subgraph" showComponentDetails="true" smallIconPath="${SUBGRAPH_DIR}/icons/metadata-factory-16.png">
<Global>
<inputPorts>
<singlePort connected="true" name="0"/>
</inputPorts>
<outputPorts>
<singlePort connected="true" name="0"/>
</outputPorts>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="debugInput1" previewAttachmentCharset="UTF-8" recordDelimiter="\r\n" type="delimited">
<Field name="field1" type="string"/>
<Field name="field2" type="integer"/>
<Field name="field3" type="boolean"/>
<Field name="field4" type="integer"/>
<Field name="field5" type="number"/>
<Field name="field6" type="number"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameter defaultHint="If provided, metadata will not use autogenerated name" label="Name" name="NAME" public="true"/>
<GraphParameter label="Record delimiter" name="RECORD_DELIMITER" public="true"/>
<GraphParameter defaultHint="Default field delimiter setting, if configured EOF as delimiter is set to true by default!" label="Field delimiter" name="FIELD_DELIMITER" public="true"/>
<GraphParameter label="Addition mode" name="ADDITION_MODE" public="true" value="APPEND">
<SingleType allowCustomValues="false" name="simpleEnum" values="PREPEND|Prepend;APPEND|Append"/>
</GraphParameter>
<GraphParameter label="Extension metadata URL" name="EXT_METADATA" public="true">
<SingleType fileExtension="*.fmt" multiple="false" name="file" selectionMode="file_only"/>
</GraphParameter>
<GraphParameter label="Field filter" name="FIELD_FILTER" public="true">
<SingleType edge="Edge1" name="fields"/>
</GraphParameter>
<GraphParameter label="Filter mode" name="FIELD_ACTION" public="true" value="REMOVE">
<SingleType allowCustomValues="false" name="simpleEnum" values="KEEP|Keep;REMOVE|Remove;KEEP_SIMILAR|Keep similar;REMOVE_SIMILAR|Remove similar;ALTER|Change properties"/>
</GraphParameter>
<GraphParameter label="Properties" name="FIELD_PROPS" public="true">
<SingleType name="properties"/>
</GraphParameter>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<Dictionary/>
</Global>
<Phase number="0">
<Node debugInput="true" guiName="DebugInput" guiX="30" guiY="100" id="DATA_GENERATOR0" recordsNumber="10" type="DATA_GENERATOR">
<attr name="generate"><![CDATA[//#CTL2

// Generates output record.
function integer generate() {
	$out.0.field1 = randomString(3,15);

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the generate. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if generate() throws an exception.
// function integer generateOnError(string errorMessage, string stackTrace) {
// }

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node genericTransformClass="com.cloverdx.consulting.metadatafactory.Transform" guiName="Metadata Engineer" guiX="432" guiY="100" id="METADATA_ENGINEER" metadataPropagationAlgorithmClass="com.cloverdx.consulting.metadatafactory.MetadataBuilder" type="GENERIC_TRANSFORMER"/>
<Node guiName="SubgraphInput" guiX="200" guiY="10" id="SUBGRAPH_INPUT0" type="SUBGRAPH_INPUT">
<Port guiY="117" name="0"/>
<Port guiY="187" name="1"/>
</Node>
<Node guiName="SubgraphOutput" guiX="800" guiY="10" id="SUBGRAPH_OUTPUT0" type="SUBGRAPH_OUTPUT">
<Port guiY="117" name="0"/>
<Port guiY="187" name="1"/>
</Node>
<Node debugOutput="true" guiName="Trash" guiX="893" guiY="100" id="TRASH" type="TRASH"/>
<Edge fromNode="DATA_GENERATOR0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="SUBGRAPH_INPUT0:0"/>
<Edge fromNode="METADATA_ENGINEER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="SUBGRAPH_OUTPUT0:0"/>
<Edge fromNode="SUBGRAPH_INPUT0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="METADATA_ENGINEER:0"/>
<Edge fromNode="SUBGRAPH_OUTPUT0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="TRASH:0"/>
</Phase>
</Graph>

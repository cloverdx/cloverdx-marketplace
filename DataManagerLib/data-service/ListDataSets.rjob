<?xml version="1.0" encoding="UTF-8"?>
<Graph author="Branislav Repcek" created="Tue Jun 04 13:10:06 CEST 2024" description="List data sets in the Data Manager and their basic properties." guiVersion="7.0.0.15" id="1717593644806" licenseCode="CloverDX-Internal-License" name="ListDataSets" nature="restJob" showComponentDetails="true">
<Global>
<EndpointSettings>
<UrlPath>/ListDataSets</UrlPath>
<Description>Show simple overview of all data sets in Data Manager.</Description>
<Category>DataManagerLib</Category>
<IconUrl>icons/GetDataSetsOverview.png</IconUrl>
<RequestMethod name="GET"/>
</EndpointSettings>
<RestJobResponseStatus>
<JobError>
<reasonPhrase>Job failed</reasonPhrase>
<statusCode>500</statusCode>
<ReasonPhrase>Job failed</ReasonPhrase>
<StatusCode>500</StatusCode>
</JobError>
<Success>
<statusCode>200</statusCode>
<StatusCode>200</StatusCode>
</Success>
<ValidationError>
<reasonPhrase>Request validation failed</reasonPhrase>
<statusCode>400</statusCode>
<ReasonPhrase>Request validation failed</ReasonPhrase>
<StatusCode>400</StatusCode>
</ValidationError>
</RestJobResponseStatus>
<Metadata id="Metadata1" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="|" name="DataSetSimple" previewAttachmentCharset="UTF-8" recordDelimiter="\n" type="delimited">
<Field label="Name" name="name" type="string"/>
<Field label="Code" name="code" type="string"/>
<Field label="Enabled" name="enabled" trim="true" type="boolean"/>
<Field label="Data retention (days)" name="dataRetentionDays" trim="true" type="long"/>
</Record>
</Metadata>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="requestEcho" recordDelimiter="\r\n" type="delimited">
<Field name="requestBody" type="string"/>
<Field name="requestClientIpAddress" type="string"/>
<Field name="requestContentType" type="string"/>
<Field name="requestEncoding" type="string"/>
<Field name="requestHeaders" type="string"/>
<Field name="requestMethod" type="string"/>
<Field name="requestParameters" type="string"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="151" id="Note0" textColor="444444" width="651" x="250" y="-200">
<attr name="text"><![CDATA[h3. ListDataSets

An app that shows a simple list of all data sets configured on the Server.]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node guiName="GetDataSetsOverview" guiX="245" guiY="0" id="GET_DATA_SETS_OVERVIEW" jobURL="${SUBGRAPH_DIR}/GetDataSetsOverview.sgrf" type="SUBGRAPH"/>
<Node guiName="Map" guiX="770" guiY="0" id="MAP" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node guiName="Input" guiX="45" guiY="-200" id="RESTJOB_INPUT0" requestFormat="JSON" restJobInput="true" type="RESTJOB_INPUT"/>
<Node attachment="false" guiName="Output" guiX="1020" guiY="-200" id="RESTJOB_OUTPUT0" metadataName="true" responseFormat="CSV" restJobOutput="true" topLevelArray="true" type="RESTJOB_OUTPUT"/>
<Edge fromNode="GET_DATA_SETS_OVERVIEW:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="MAP:0"/>
<Edge fromNode="MAP:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="RESTJOB_OUTPUT0:0"/>
</Phase>
</Graph>
